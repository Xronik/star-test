{"version":3,"sources":["Components/Input.jsx","Components/List.jsx","Context.js","Components/Cell.jsx","Components/Field.jsx","App.js","index.js"],"names":["Input","modes","setInput","inputRef","useRef","className","ref","name","value","Object","entries","map","el","index","field","type","onClick","Number","current","List","hoverSquares","i","Context","createContext","Cell","column","row","useState","color","setColor","context","useContext","colorStyles","backgroundColor","useEffect","input","style","onMouseEnter","setHoverSquares","filter","Field","numberOfCells","setNumberOfCells","fieldRef","setRow","data","gridTemplateColumns","gridTemplateRows","Array","fill","Math","ceil","App","setModes","fetch","then","res","json","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAsBeA,MAnBf,YAAqC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAEhBC,EAAWC,iBAAO,MAExB,OACE,sBAAKC,UAAU,aAAf,UACE,yBAAQC,IAAKH,EAAUI,KAAK,OAAOF,UAAU,QAA7C,UACE,wBAAQG,MAAM,IAAd,wBAEEC,OAAOC,QAAQT,GAAOU,KAAI,SAACC,EAAIC,GAC7B,OAAO,wBAAoBL,MAAOI,EAAG,GAAGE,MAAjC,SAAyCF,EAAG,IAA/BC,SAI1B,wBAAQR,UAAU,MAAMU,KAAK,SAASC,QAAS,kBAAMd,EAASe,OAAOd,EAASe,QAAQV,SAAtF,uBCASW,MAff,YAAiC,IAAjBC,EAAgB,EAAhBA,aACd,OACE,sBAAKf,UAAU,OAAf,UACE,sBAAMA,UAAU,aAAhB,2BACA,qBAAKA,UAAU,YAAf,gBAEIe,QAFJ,IAEIA,OAFJ,EAEIA,EAAcT,KAAI,SAACC,EAAIS,GACrB,OAAO,yCAAoBT,EAAG,GAAvB,QAAgCA,EAAG,GAAnC,MAAWS,Y,OCLfC,EAFCC,0BC+BDC,MA7Bf,YAAuC,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,IAAKb,EAAS,EAATA,MAAS,EAEVc,oBAAS,GAFC,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAG9BC,EAAUC,qBAAWT,GAEvBU,EAAc,CAChBC,gBAAiBL,EAAQ,QAAU,eAerC,OAJAM,qBAAU,WACRL,GAAS,KACR,CAACC,EAAQK,QAGV,qBAAKC,MAAOJ,EAAa3B,UAAU,OAAOgC,aAAc,WACrDT,EAbHE,EAAQQ,iBAAgB,SAAClB,GAAD,4BAAsBA,GAAtB,CAAoC,CAACP,EAAOY,EAAQC,QAI5EI,EAAQQ,iBAAgB,SAAClB,GAAD,OAAkBA,EAAamB,QAAO,SAAC3B,GAAD,OAAQA,EAAG,KAAOC,QAU9EgB,GAAUD,OCWDY,MAnCf,YAA2B,IAAVL,EAAS,EAATA,MAAS,EAEkBR,mBAAS,GAF3B,mBAEjBc,EAFiB,KAEFC,EAFE,KAGlBC,EAAWvC,iBAAO,IAYlBwC,EAAS,SAAC/B,GAEd,OADYA,EAASsB,EAAS,GAShC,OALAD,qBAAU,WAfY,IAACW,IAgBPV,EAfdQ,EAASzB,QAAQkB,MAAMU,oBAAvB,iBAAuDD,EAAvD,UACAF,EAASzB,QAAQkB,MAAMW,iBAAvB,iBAAoDF,EAApD,UAeAH,EAAiBP,EAAQA,KACxB,CAACA,IAGF,qBAAK9B,UAAU,QAAQC,IAAKqC,EAA5B,SAEIK,MAAMP,GAAeQ,KAAK,IAAItC,KAAI,SAACC,EAAIS,GAAL,OAChC,cAAC,EAAD,CAAcI,QAnBHZ,EAmBqBQ,EAlBzB6B,KAAKC,MAAMtC,EAAQ,GAAKsB,IAkBKT,IAAKkB,EAAOvB,GAAIR,MAAOQ,GAAhDA,GAnBD,IAACR,QCwBNuC,MA7Bf,WAAgB,IAAD,EAEazB,mBAAS,GAFtB,mBAEN1B,EAFM,KAECoD,EAFD,OAGa1B,mBAAS,GAHtB,mBAGNQ,EAHM,KAGCjC,EAHD,OAI2ByB,mBAAS,IAJpC,mBAINP,EAJM,KAIQkB,EAJR,KAMP9B,EAAQ,CACZ2B,QACAG,mBAQF,OALAJ,qBAAU,WACRoB,MAAM,mCAAmCC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAAQF,MAAK,SAACV,GAAD,OAAUQ,EAASR,MAC3FP,EAAgB,MACf,CAACH,IAGF,cAAC,EAAQuB,SAAT,CAAkBlD,MAAOA,EAAzB,SACE,sBAAKH,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAOH,SAAUA,EAAUD,MAAOA,IAClC,cAAC,EAAD,CAAOkC,MAAOA,OAEhB,cAAC,EAAD,CAAM9B,UAAU,OAAOe,aAAcA,UC1B7CuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d8229444.chunk.js","sourcesContent":["import { useRef } from 'react'\r\nimport '../App.css'\r\n\r\nfunction Input({ modes, setInput }) {\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  return (\r\n    <div className=\"input_wrap\">\r\n      <select ref={inputRef} name='mode' className='input'>\r\n        <option value='0'>Pick mode:</option>\r\n        {\r\n          Object.entries(modes).map((el, index) => {\r\n            return <option key={index} value={el[1].field}>{el[0]}</option>\r\n          })\r\n        }\r\n      </select>\r\n      <button className='btn' type='submit' onClick={() => setInput(Number(inputRef.current.value))}>START</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import '../App.css'\r\n\r\nfunction List({ hoverSquares }) {\r\n  return (\r\n    <div className='list'>\r\n      <span className='list_title'>Hover squares</span>\r\n      <div className='list_wrap'>\r\n        {\r\n          hoverSquares?.map((el, i) => {\r\n            return <span key={i}> row:{el[1]} col:{el[2]} </span>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import { createContext } from 'react'\r\n\r\nconst Context = createContext();\r\n\r\nexport default Context","import { useState, useEffect, useContext } from 'react'\r\nimport Context from '../Context'\r\n\r\n\r\nfunction Cell({ column, row, index }) {\r\n\r\n  const [color, setColor] = useState(true)\r\n  const context = useContext(Context)\r\n\r\n  let colorStyles = {\r\n    backgroundColor: color ? 'white' : 'deepskyblue'\r\n  }\r\n\r\n  const addPosititonToList = () => {\r\n    context.setHoverSquares((hoverSquares) => [...hoverSquares, [index, column, row]])\r\n  }\r\n\r\n  const removePositionFromList = () => {\r\n    context.setHoverSquares((hoverSquares) => hoverSquares.filter((el) => el[0] !== index))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setColor(true)\r\n  }, [context.input])\r\n\r\n  return (\r\n    <div style={colorStyles} className='cell' onMouseEnter={() => {\r\n      (color) ? addPosititonToList() : removePositionFromList();\r\n      setColor(!color);\r\n    }}></div >\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport '../App.css'\r\nimport Cell from './Cell'\r\n\r\nfunction Field({ input }) {\r\n\r\n  const [numberOfCells, setNumberOfCells] = useState(0)\r\n  const fieldRef = useRef('')\r\n\r\n  const getSquareForm = (data) => {\r\n    fieldRef.current.style.gridTemplateColumns = `repeat(${data},41px)`\r\n    fieldRef.current.style.gridTemplateRows = `repeat(${data},41px)`\r\n  }\r\n\r\n  const setColumn = (index) => {\r\n    let column = Math.ceil((index + 1) / input)\r\n    return column\r\n  }\r\n\r\n  const setRow = (index) => {\r\n    let row = ((index) % input) + 1\r\n    return row\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSquareForm(input)\r\n    setNumberOfCells(input * input)\r\n  }, [input])\r\n\r\n  return (\r\n    <div className='field' ref={fieldRef}>\r\n      {\r\n        Array(numberOfCells).fill('').map((el, i) =>\r\n          <Cell key={i} column={setColumn(i)} row={setRow(i)} index={i} />)\r\n      }\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Field","import './App.css';\nimport Input from './Components/Input';\nimport List from './Components/List';\nimport Field from './Components/Field'\nimport Context from './Context'\nimport React, { useState, useEffect } from 'react'\n\nexport const AppContext = React.createContext()\n\nfunction App() {\n\n  const [modes, setModes] = useState(0)\n  const [input, setInput] = useState(0)\n  const [hoverSquares, setHoverSquares] = useState([])\n\n  const value = {\n    input,\n    setHoverSquares\n  }\n\n  useEffect(() => {\n    fetch('http://demo1030918.mockable.io/').then((res) => res.json()).then((data) => setModes(data))\n    setHoverSquares([])\n  }, [input])\n\n  return (\n    <Context.Provider value={value}>\n      <div className=\"app\">\n        <div className='main_wrap'>\n          <Input setInput={setInput} modes={modes} />\n          <Field input={input} />\n        </div>\n        <List className='list' hoverSquares={hoverSquares} />\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}